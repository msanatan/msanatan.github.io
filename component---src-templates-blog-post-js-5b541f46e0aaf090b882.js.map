{"version":3,"file":"component---src-templates-blog-post-js-5b541f46e0aaf090b882.js","mappings":"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","sources":["webpack://msanatan.com/./src/components/layout.module.css","webpack://msanatan.com/./src/components/layout.js","webpack://msanatan.com/./src/components/pageHead.js","webpack://msanatan.com/./src/templates/blogPost.module.css","webpack://msanatan.com/./src/templates/blogPost.js","webpack://msanatan.com/./src/utils/slugify.js","webpack://msanatan.com/./src/templates/blogList.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var menuItem = \"layout-module--menu-item--65d49\";\nexport var menuItemActive = \"layout-module--menu-item-active--6302b\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { menuItem, menuItemActive } from './layout.module.css'\n\nconst Layout = ({ title, description, meta, children }) => {\n  return (\n    <div className='container d-flex flex-column min-vh-100'>\n      <header>\n        <nav className='navbar navbar-expand-lg navbar-light'>\n          <button className='navbar-toggler' type='button' data-bs-toggle=\"collapse\" data-bs-target=\"#navBarTogglerMenu\" aria-controls=\"navBarTogglerMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className='navbar-toggler-icon'></span>\n          </button>\n          <div className='collapse navbar-collapse justify-content-lg-center' id='navBarTogglerMenu'>\n            <ul className='navbar-nav mr-auto mb-2 mb-lg-0'>\n              <li className='nav-item'>\n                <Link\n                  to='/'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Home</Link>\n              </li>\n              <li className='nav-item'>\n                <Link\n                  to='/about'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >About</Link>\n              </li>\n              <li className='nav-item'>\n                <a\n                  href='https://gameboymarcus.itch.io'\n                  target='_blank'\n                  rel='nofollow noopener noreferrer'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Games</a>\n              </li>\n              <li className='nav-item'>\n                <Link\n                  to='/blog'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Blog</Link>\n              </li>\n              <li className='nav-item'>\n                <Link\n                  to='/contact'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Contact</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </header>\n      <main className='flex-grow-1 d-flex'>\n        {children}\n      </main>\n      <footer className='footer mt-auto py-2'>\n        <div className='container'>\n          <span>&copy; {new Date().getFullYear()} Marcus Sanatan</span>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst PageHead = ({ location, meta, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            siteLang\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = meta?.description || site.siteMetadata.description\n  const siteTitle = site.siteMetadata.title\n  const pageTitle = meta?.title ? `${meta.title} — ${siteTitle}` : siteTitle\n\n  return (\n    <>\n      <title>{pageTitle}</title>\n      <html lang={meta?.lang || site.siteMetadata.siteLang} />\n      <body className=\"h-100\" />\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || \"\"} />\n      <meta name=\"twitter:title\" content={pageTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n    </>\n  )\n}\n\nexport default PageHead\n","// extracted by mini-css-extract-plugin\nexport var header = \"blogPost-module--header--0fe78\";\nexport var navLink = \"blogPost-module--nav-link--d1bed\";\nexport var postContainer = \"blogPost-module--post-container--723dd\";","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport { slugify } from '../utils/slugify'\nimport { postContainer, header, navLink } from './blogPost.module.css'\nimport { tagLink } from './blogList.module.css'\nimport PageHead from '../components/pageHead'\n\nexport function Head({ location, params, data, pageContext }) {\n  return (\n    <PageHead\n      meta={{\n        title: data.markdownRemark.frontmatter.title,\n        description: `A collection of my blog posts tagged with ${pageContext.tag}`,\n      }}\n    />\n  );\n}\n\nconst BlogPostTemplate = ({ data }) => {\n  const post = data.markdownRemark\n  const siteTitle = post.frontmatter.title\n  const description = post.frontmatter.description || post.excerpt\n  const { previous, next } = data\n\n  const postMetadata = post.frontmatter.updated ? `${post.frontmatter.date} (updated: ${post.frontmatter.updated})` : `${post.frontmatter.date}`\n  const postTags = (\n    <p>\n      {post.frontmatter.tags.map((tag, i) => {\n        return i < post.frontmatter.tags.length - 1\n          ? (<span key={i}><Link to={`/tags/${slugify(tag)}`} itemProp=\"url\" className={tagLink}>{tag}</Link>, </span>)\n          : (<Link to={`/tags/${slugify(tag)}`} itemProp=\"url\" className={tagLink} key={i}>{tag}</Link>)\n      })}\n    </p>\n  )\n\n  return (\n    <Layout title={siteTitle} description={description} meta={[{ keywords: post.frontmatter.tags }]}>\n      <div className={`container d-flex flex-column ${postContainer}`}>\n        <div className='row'>\n          <div className='offset-lg-1 col-lg-10'>\n            <article\n              className='blog-post'\n              itemScope\n              itemType='http://schema.org/Article'\n            >\n              <header className={`${header} my-3`}>\n                <h1 itemProp='headline'>{post.frontmatter.title}</h1>\n                <small>{postMetadata}</small>\n                {postTags}\n              </header>\n              <section\n                dangerouslySetInnerHTML={{ __html: post.html }}\n                itemProp='articleBody'\n              />\n            </article>\n          </div>\n        </div>\n        <div className='row my-3'>\n          <div className='offset-lg-1 col-lg-10'>\n            <nav className='blog-post-nav'>\n              <ul\n                style={{\n                  display: `flex`,\n                  flexWrap: `wrap`,\n                  justifyContent: `space-between`,\n                  listStyle: `none`,\n                  padding: 0,\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link to={previous.fields.slug} rel='prev' className={navLink}>\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel='next' className={navLink}>\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"YYYY-MM-DD\")\n        updated(formatString: \"YYYY-MM-DD\")\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`","// Taken from https://gist.github.com/codeguy/6684588\nexport const slugify = (str) => {\n  str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n  str = str.toLowerCase();\n\n  // remove accents, swap ñ for n, etc\n  const from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\n  const to = \"aaaaeeeeiiiioooouuuunc------\";\n\n  for (let i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n  }\n\n  str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-'); // collapse dashes\n\n  return str;\n}","// extracted by mini-css-extract-plugin\nexport var postLink = \"blogList-module--post-link--f96a8\";\nexport var tagLink = \"blogList-module--tag-link--78e62\";"],"names":["menuItem","menuItemActive","_ref","title","description","meta","children","React","className","type","id","Link","to","activeClassName","href","target","rel","Date","getFullYear","_site$siteMetadata","_site$siteMetadata$so","location","site","useStaticQuery","metaDescription","siteMetadata","siteTitle","pageTitle","lang","siteLang","name","content","property","social","twitter","navLink","Head","params","data","pageContext","PageHead","markdownRemark","frontmatter","tag","_ref2","post","excerpt","previous","next","postMetadata","updated","date","postTags","tags","map","i","length","key","slugify","itemProp","tagLink","Layout","keywords","itemScope","itemType","header","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","str","replace","toLowerCase","from","l","RegExp","charAt","postLink"],"sourceRoot":""}