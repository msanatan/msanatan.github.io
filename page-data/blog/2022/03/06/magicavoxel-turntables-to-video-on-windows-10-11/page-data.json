{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2022/03/06/magicavoxel-turntables-to-video-on-windows-10-11/","result":{"data":{"site":{"siteMetadata":{"title":"Marcus Sanatan"}},"markdownRemark":{"id":"0ae5006d-f3cb-57ff-bb4a-706290768865","excerpt":"I’ve recently been using MagicaVoxel to create voxel art (pixel art but 3D, think Minecraft) and I love it! It’s so simple and it has a lot of power…","html":"<p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.49999999999999%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <div class=\"embedVideo-container\"> <iframe title=\"\" src=\"https://www.youtube-nocookie.com/embed/hKrD1xWQAew?rel=0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" loading=\"lazy\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"></iframe> </div> </div></p>\n<p>I’ve recently been using <a href=\"https://ephtracy.github.io/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">MagicaVoxel</a> to create voxel art (pixel art but 3D, think Minecraft) and I love it! It’s so simple and it has a lot of power.</p>\n<p>MagicaVoxel has a “turntable” export which takes many pictures of your rendered object as it rotates 360 degrees, or whatever you specify. It’s commonly used to make gifs and videos. Getting a video on Windows 11 was a bit tricky at first.</p>\n<p>I have WSL setup on my Windows 11 machine, so the code and commands I run are on my Ubuntu OS. However, you don’t need WSL to do this.</p>\n<p><a href=\"https://medium.com/tech-notes-and-geek-stuff/voxel-art-4f8ee761a3ab\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">This guide</a> on medium pointed me in the right direction. I’ve never used <code class=\"language-text\">ffmpeg</code> before, it’s commonly used for converting videos from one format to another. It can also convert the turntable images from MagicaVoxel into a video!</p>\n<p>The first step is to install <code class=\"language-text\">ffmpeg</code> via WSL:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> ffmpeg</code></pre></div>\n<p>If you’re not using WSL, you can follow the instructions on their <a href=\"https://www.ffmpeg.org/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">homepage</a> to install directly on Windows.</p>\n<p>The next step is to change the file names to make it easier for MagicaVoxel. You may not have to do this if you choose an easy file name while exporting, unlike a certain developer… To change the names of all my turntable images in a folder, I ran this script I created:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> os <span class=\"token keyword\">import</span> listdir<span class=\"token punctuation\">,</span> rename\n<span class=\"token keyword\">from</span> os<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">import</span> isfile<span class=\"token punctuation\">,</span> join\n\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;Turntable Images Path>'</span>\nonly_files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>f <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> listdir<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> isfile<span class=\"token punctuation\">(</span>join<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> img_file <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>only_files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  idx_str <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span>\n  rename<span class=\"token punctuation\">(</span>join<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> img_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> join<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'img</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>idx_str<span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">.png'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now all the files would be like <code class=\"language-text\">img000.png</code>, <code class=\"language-text\">img001.png</code>, etc. In your terminal, run the following ffmpeg command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ffmpeg <span class=\"token parameter variable\">-r</span> <span class=\"token number\">30</span> <span class=\"token parameter variable\">-s</span> 960x800 <span class=\"token parameter variable\">-i</span> img%03d.png <span class=\"token parameter variable\">-codec:v</span> mpeg4 <span class=\"token parameter variable\">-flags:v</span> +qscale <span class=\"token parameter variable\">-global_quality:v</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-codec:a</span> libmp3lame nintendoswitch.mp4</code></pre></div>\n<p>For an MP4 on Windows, I was only successful with the <code class=\"language-text\">mpeg4</code> codec. I’m no export on <code class=\"language-text\">ffmpeg</code> by a longshot, but after reading in forums and trying things out - the above command gives me the best video quality.</p>\n<p>And that’s all, have fun showing off your work with cool videos!</p>\n<p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.49999999999999%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <div class=\"embedVideo-container\"> <iframe title=\"\" src=\"https://www.youtube-nocookie.com/embed/Vn0Ki_b-qzg?rel=0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" loading=\"lazy\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"></iframe> </div> </div></p>","frontmatter":{"title":"MagicaVoxel Turntables to Video on Windows 10/11","tags":["3dgraphics","magicavoxel"],"date":"2022-03-06","updated":null}},"previous":{"fields":{"slug":"/blog/2022/01/02/2021-was-trying-and-wonderful"},"frontmatter":{"title":"2021 Was Trying and Wonderful"}},"next":{"fields":{"slug":"/blog/2022/03/06/fixing-aws-chalices-cognito-cors-errors"},"frontmatter":{"title":"Fixing AWS Chalice's Cognito CORS Errors"}}},"pageContext":{"id":"0ae5006d-f3cb-57ff-bb4a-706290768865","previousPostId":"8069ddd3-e0d3-5775-850a-43fa71d8b39e","nextPostId":"19e1ac77-6afd-55ff-b4e1-226542cc5143"}},"staticQueryHashes":["1391858338"],"slicesMap":{}}