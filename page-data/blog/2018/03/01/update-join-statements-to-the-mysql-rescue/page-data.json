{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2018/03/01/update-join-statements-to-the-mysql-rescue/","result":{"data":{"site":{"siteMetadata":{"title":"Marcus Sanatan"}},"markdownRemark":{"id":"d472cf50-4a7b-5875-959b-57a6b7dc4bef","excerpt":"A wise man once said, “when it comes to databases don’t be exceptional; be normal”. For a project I’m working on data normalisation was part of the process to…","html":"<p>A wise man once said, “when it comes to databases don’t be exceptional; be normal”. For a project I’m working on data normalisation was part of the process to make reporting more accurate and some future work much easier to complete. This particular database had two tables, A and B, with a value in A that obviously references B. The issue was that A didn’t have an ID for a reference, A had a duplicated value of what’s stored in B - all managed by the application. One key reason why we didn’t like this setup was that updates in B won’t cascade to A.</p>\n<p>In this case we want to modify A so that it’ll store the IDs of the values it wants in B. Once that’s in place we can modify MySQL so that it knows that one of A’s foreign keys is the ID of B.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> A\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> B <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>value_field<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SET</span> A<span class=\"token punctuation\">.</span>value_field <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>We’re updating A but also joining B beforehand because we want to get a value from that table. The keyword <code class=\"language-text\">USING</code> is used to join a table when they have the same column name. If that wasn’t the case, you could use the more common <code class=\"language-text\">ON A.some_column = B.another_column</code>.</p>\n<p>At this point we replaced the hardcoded values to IDs. We can now go ahead and rename the column and make it a foreign key.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- Name change</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> A\nCHANGE <span class=\"token keyword\">COLUMN</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>value_field<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>b_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Make foreign key</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> A\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id_b_fk_idx<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>b_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> A\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>b_id_fk1<span class=\"token punctuation\">`</span></span>\n  <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>b_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">REFERENCES</span> B <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">NO</span> <span class=\"token keyword\">ACTION</span>\n  <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">NO</span> <span class=\"token keyword\">ACTION</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And that’s a wrap, a better database that leads to a better world. Happy normalising everyone!</p>","frontmatter":{"title":"Update-Join Statements to the MySQL Rescue","tags":["mysql"],"date":"2018-03-01","updated":null}},"previous":{"fields":{"slug":"/blog/2018/01/01/demo-your-dev-app-with-ngrok"},"frontmatter":{"title":"Demo Your Dev App with Ngrok"}},"next":{"fields":{"slug":"/blog/2018/03/25/adding-more-hops-to-your-brew"},"frontmatter":{"title":"Adding More Hops to Your Brew"}}},"pageContext":{"id":"d472cf50-4a7b-5875-959b-57a6b7dc4bef","previousPostId":"7ead8f74-f755-5ea9-84a8-8178f2bb40b0","nextPostId":"265685bf-0723-590f-8d85-ccdf7f5ddc41"}},"staticQueryHashes":["1391858338"],"slicesMap":{}}