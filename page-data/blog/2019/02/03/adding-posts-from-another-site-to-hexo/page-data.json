{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2019/02/03/adding-posts-from-another-site-to-hexo/","result":{"data":{"site":{"siteMetadata":{"title":"Marcus Sanatan"}},"markdownRemark":{"id":"1076e2d7-5897-50d6-b6e1-0a2fef2f5d65","excerpt":"Hey everyone! In my last post I wrote about scraping another website I write articles for, which I include here https://msanatan.com/categories/other/. This is…","html":"<p>Hey everyone!</p>\n<p>In my last post I wrote about scraping another website I write articles for, which I include here <a href=\"https://msanatan.com/categories/other/\">https://msanatan.com/categories/other/</a>. This is how I integrated them in the site.</p>\n<h2>First Attempt with JSON</h2>\n<p>I first tried to load the extra blog posts as a <a href=\"https://hexo.io/docs/data-files.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">data file</a>. Hexo allows content stored as JSON or YAML in the <code class=\"language-text\">source/_data</code> directory to be loaded in templates. The scraper I built orginally stored the articles as JSON, and it worked. However, there were a couple of things I didn’t like.</p>\n<p>I needed to create new templates to load from the data files. This is added maintenance for my theme. If I write for more than one external site, I would have to scrape the other sites and integrate each site’s blog posts into one JSON blob. While not a herculean effort, data files for such dynamic thing like posts do not feel intuitive.</p>\n<p>Themes paginate easily for markdown files processed as posts. If you’re reading from a data file, you’ll have to implement pagination yourself. Doable, but I couldn’t help but think there was a better way.</p>\n<h2>Stick with Markdown for Posts</h2>\n<p>If you look at the Hexo docs for <a href=\"https://hexo.io/docs/variables.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">variables</a>, you can see two things:</p>\n<ul>\n<li>Pages have a <code class=\"language-text\">link</code> attribute that’s described as “The external link of the article (Used in link posts)”</li>\n<li>Posts have all the variables Pages have</li>\n</ul>\n<p>Therfore, we can link to an external post by the setting the appropriate markdown variable like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\ntitle: Your blog title\ndate: 2019-02-03\ncategories: [other]\nlink: https://example.com/other-post-from-you/\n---</code></pre></div>\n<h2>Adding a Page for Linked Posts</h2>\n<p>The next time you run <code class=\"language-text\">hexo g</code> the posts would appear on your page just like the posts you write on your blog.</p>\n<p>In my example, I used the ‘other’ as the category for the external post. That was intentional. If I’d like to create a page for those articles I just need to add <code class=\"language-text\">Other Writing: /categories/other/</code> to my theme’s <code class=\"language-text\">_config.yml</code> navigation section:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">nav</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">Home</span><span class=\"token punctuation\">:</span> /\n  <span class=\"token key atrule\">About</span><span class=\"token punctuation\">:</span> /about/\n  <span class=\"token key atrule\">Archives</span><span class=\"token punctuation\">:</span> /archives/\n  <span class=\"token key atrule\">Other Writing</span><span class=\"token punctuation\">:</span> /categories/other/\n  <span class=\"token key atrule\">Search</span><span class=\"token punctuation\">:</span> /search/\n  <span class=\"token key atrule\">Contact</span><span class=\"token punctuation\">:</span> /contact/</code></pre></div>\n<p>Each theme has it’s own way to define navigation, in my experience they’re usually a configuration. The key thing is that it links to the <code class=\"language-text\">/categories/other/</code>. In my theme, a category page uses the archive template, something common in most themes as well. The archive template has pagination! So there’s no need to recreate the same functionality for data files.</p>\n<p>As the posts are markdown files, integrating blogs from different websites is easy. There’s no need for consolidation into one file as I would have done with the JSON blob. This setup bypasses my 2 gripes with data files.</p>\n<p>I didn’t figure this out on my own, major thanks to <a href=\"https://github.com/tcrowe\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Tony Crowe</a> for dealing with my GitHub <a href=\"https://github.com/hexojs/hexo/issues/3423\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">issue</a>. He also gave me some pointers on how to filter posts with links and even highlight them with icons. The Hexo community is pretty helpful, when in doubt just give a shout.</p>\n<p>Happy blogging!</p>","frontmatter":{"title":"Add Posts from Another Site to Hexo","tags":["javascript","hexo"],"date":"2019-02-03","updated":null}},"previous":{"fields":{"slug":"/blog/2019/01/20/weekend-hack-another-scraper"},"frontmatter":{"title":"Weekend Hack, Another Scraper"}},"next":{"fields":{"slug":"/blog/2019/02/03/january-2019-game-project-swerve"},"frontmatter":{"title":"January 2019 Game Project: Swerve"}}},"pageContext":{"id":"1076e2d7-5897-50d6-b6e1-0a2fef2f5d65","previousPostId":"7be52532-b827-5591-a091-704ff74d2abb","nextPostId":"dd9f523a-1590-53d8-bb9a-5fd48423bc1f"}},"staticQueryHashes":["1391858338"],"slicesMap":{}}