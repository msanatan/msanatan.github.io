{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2019/07/18/mock-servers-with-openapi-and-api-sprout/","result":{"data":{"site":{"siteMetadata":{"title":"Marcus Sanatan"}},"markdownRemark":{"id":"4fe133e7-7a4a-5fa4-9b2d-f10b8c2ec9ee","excerpt":"Hey API developers! This is a pretty quick post that could save you time like it did for me! In my current job we develop a lot of microservices, the majority…","html":"<p>Hey API developers!</p>\n<p>This is a pretty quick post that could save you time like it did for me! In my current job we develop a lot of microservices, the majority being RESTful. For each microservice we define an <a href=\"https://swagger.io/specification/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenAPI specification</a> - a YAML file that describes the API. This is useful because we can think about our services at a pretty high level and figure out how they can communicate with each other without writing a line of code.</p>\n<p>Large problems like the one we’re tackling may require many microservices. There are merits and downsides for this architecture but those can be discussed in a different post. With limited resources, not all microservices can be developed at the same time.  Luckily with our OpenAPI file, it’s easy to mock them!</p>\n<p>Let’s say we have a simple API definition that returns a requestor’s IP address:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">openapi</span><span class=\"token punctuation\">:</span> 3.0.0\n\n<span class=\"token key atrule\">info</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Provides clients with their public IP address'</span>\n  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1.0.0'</span>\n  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'IP Address API'</span>\n  <span class=\"token key atrule\">contact</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'support@ipaddr.co'</span>\n\n<span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">/v4</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">summary</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Retrieve IPv4 address'</span>\n      <span class=\"token key atrule\">responses</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">200</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Return IP of user'</span>\n          <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">application/json</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n                <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">$ref</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#/components/schemas/IPAddress'</span>\n              <span class=\"token key atrule\">example</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">ip</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'234.21.235.206'</span>\n  <span class=\"token key atrule\">/v6</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">summary</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Retrieve IPv6 address'</span>\n      <span class=\"token key atrule\">responses</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">200</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Return IP of user'</span>\n          <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">application/json</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n                <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">$ref</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#/components/schemas/IPAddress'</span>\n              <span class=\"token key atrule\">example</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">ip</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'e2ad:23d6:871b:ee97:1154:ed95:742f:3ef4'</span>\n  <span class=\"token key atrule\">/health</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">summary</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Check API availability'</span>\n      <span class=\"token key atrule\">operationId</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'api.operational.health'</span>\n      <span class=\"token key atrule\">responses</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">200</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Transactions Repository is healthy'</span>\n          <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">application/json</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">$ref</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#/components/schemas/Health'</span>\n              <span class=\"token key atrule\">example</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'OK'</span>\n<span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">schemas</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">Health</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n      <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n      <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> message\n    <span class=\"token key atrule\">IPAddress</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n      <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ip</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n      <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> ip</code></pre></div>\n<p>We can use <a href=\"https://github.com/danielgtaylor/apisprout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">APISprout</a> to parse our swagger file and create a server we can use for testing. We define examples in our OpenAPI specification so our mock server can have set data. If you don’t define examples, it would generate dummy data by inspecting the schema. I prefer to use it via the docker container because that makes it deployable in my work environment.</p>\n<p>Once the server is up and running (don’t forget to add a Docker volume with the full path if you’re referencing a local YAML file), we can send requests to it like normal:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Accept: application/json\"</span> http://localhost:8000/v4\n<span class=\"token comment\"># {</span>\n<span class=\"token comment\">#   \"ip\": \"234.21.235.206\"</span>\n<span class=\"token comment\"># }</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Accept: application/json\"</span> http://localhost:8000/v6\n<span class=\"token comment\"># {</span>\n<span class=\"token comment\">#   \"ip\": \"e2ad:23d6:871b:ee97:1154:ed95:742f:3ef4\"</span>\n<span class=\"token comment\"># }</span></code></pre></div>\n<p>We can confirm from the server logs they were hit as well:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2019/07/18 04:03:36 GET /v4 (Accept application/json) (Retrieve IPv4 address) => 200 (application/json)\n2019/07/18 04:03:47 GET /v6 (Accept application/json) (Retrieve IPv6 address) => 200 (application/json)</code></pre></div>\n<p>And that’s it for today! I hope this tool can unblock you as much as it did for me.</p>\n<p>Happy API developing!</p>","frontmatter":{"title":"Mock Servers with OpenAPI and API Sprout","tags":["golang","openapi"],"date":"2019-07-18","updated":null}},"previous":{"fields":{"slug":"/blog/2019/02/03/january-2019-game-project-swerve"},"frontmatter":{"title":"January 2019 Game Project: Swerve"}},"next":{"fields":{"slug":"/blog/2019/09/09/add-a-contact-form-to-your-static-site"},"frontmatter":{"title":"Add a Contact Form to Your Static Site"}}},"pageContext":{"id":"4fe133e7-7a4a-5fa4-9b2d-f10b8c2ec9ee","previousPostId":"dd9f523a-1590-53d8-bb9a-5fd48423bc1f","nextPostId":"e173ea51-0fcb-5139-94c2-444d7fe0e72b"}},"staticQueryHashes":["1391858338"],"slicesMap":{}}