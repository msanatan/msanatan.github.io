{"version":3,"file":"component---src-templates-tag-page-js-01777d3c4bd085e8e185.js","mappings":"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","sources":["webpack://msanatan.com/./src/components/blogButton.js","webpack://msanatan.com/./src/components/layout.module.css","webpack://msanatan.com/./src/components/layout.js","webpack://msanatan.com/./src/components/pageHead.js","webpack://msanatan.com/./src/templates/tagPage.js","webpack://msanatan.com/./src/utils/slugify.js","webpack://msanatan.com/./src/styles/page.module.css","webpack://msanatan.com/./src/templates/blogList.module.css"],"sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { btnNav } from './blogButton.module.css'\n\nconst BlogListButton = ({ text, link }) => {\n  return (\n    <Link to={link} type='button' className={`btn ${btnNav}`} role='button'>{text}</Link>\n  )\n}\n\nexport default BlogListButton\n","// extracted by mini-css-extract-plugin\nexport var menuItem = \"layout-module--menu-item--65d49\";\nexport var menuItemActive = \"layout-module--menu-item-active--6302b\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { menuItem, menuItemActive } from './layout.module.css'\n\nconst Layout = ({ title, description, meta, children }) => {\n  return (\n    <div className='container d-flex flex-column min-vh-100'>\n      <header>\n        <nav className='navbar navbar-expand-lg navbar-light'>\n          <button className='navbar-toggler' type='button' data-bs-toggle=\"collapse\" data-bs-target=\"#navBarTogglerMenu\" aria-controls=\"navBarTogglerMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className='navbar-toggler-icon'></span>\n          </button>\n          <div className='collapse navbar-collapse justify-content-lg-center' id='navBarTogglerMenu'>\n            <ul className='navbar-nav mr-auto mb-2 mb-lg-0'>\n              <li className='nav-item'>\n                <Link\n                  to='/'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Home</Link>\n              </li>\n              <li className='nav-item'>\n                <Link\n                  to='/about'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >About</Link>\n              </li>\n              <li className='nav-item'>\n                <a\n                  href='https://gameboymarcus.itch.io'\n                  target='_blank'\n                  rel='nofollow noopener noreferrer'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Games</a>\n              </li>\n              <li className='nav-item'>\n                <Link\n                  to='/blog'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Blog</Link>\n              </li>\n              <li className='nav-item'>\n                <Link\n                  to='/contact'\n                  className={`nav-link ${menuItem}`}\n                  activeClassName={menuItemActive}\n                >Contact</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </header>\n      <main className='flex-grow-1 d-flex'>\n        {children}\n      </main>\n      <footer className='footer mt-auto py-2'>\n        <div className='container'>\n          <span>&copy; {new Date().getFullYear()} Marcus Sanatan</span>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst PageHead = ({ location, meta, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            siteLang\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = meta?.description || site.siteMetadata.description\n  const siteTitle = site.siteMetadata.title\n  const pageTitle = meta?.title ? `${meta.title} â€” ${siteTitle}` : siteTitle\n\n  return (\n    <>\n      <title>{pageTitle}</title>\n      <html lang={meta?.lang || site.siteMetadata.siteLang} />\n      <body className=\"h-100\" />\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || \"\"} />\n      <meta name=\"twitter:title\" content={pageTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n    </>\n  )\n}\n\nexport default PageHead\n","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport BlogListButton from '../components/blogButton'\nimport { slugify } from '../utils/slugify'\nimport { pageTitle } from '../styles/page.module.css'\nimport { postLink, tagLink } from './blogList.module.css'\nimport PageHead from '../components/pageHead'\n\nexport function Head({ location, params, data, pageContext }) {\n  return (\n    <PageHead\n      meta={{\n        title: pageContext.tag,\n        description: `A collection of my blog posts tagged with ${pageContext.tag}`,\n      }}\n    />\n  );\n}\n\nconst TagsTemplate = ({ data, pageContext }) => {\n  const { currentPage, numPages, tag } = pageContext\n  const posts = data.allMarkdownRemark.nodes\n  const title = currentPage > 1 ? `${tag} pg. ${currentPage}` : `${tag}`\n\n  if (posts.length === 0) {\n    return (\n      <Layout title={title}>\n        <p>\n          Yikes! Can't find no blogs with that tag. Check back later!\n        </p>\n      </Layout >\n    )\n  }\n\n  let navButtons;\n  if (numPages !== 1) {\n    navButtons = (\n      <div className='row my-1'>\n        <div className='col-6 d-flex justify-content-end' >\n          {currentPage > 1 ? <BlogListButton text='Previous' link={currentPage > 2 ? `/tags/${slugify(tag)}/${currentPage - 1}` : `/tags/${slugify(tag)}`} /> : null}\n        </div >\n        <div className='col-6 d-flex justify-content-start'>\n          {currentPage < numPages ? <BlogListButton text='Next' link={`/tags/${slugify(tag)}/${currentPage + 1}`} /> : null}\n        </div>\n      </div >\n    )\n  }\n\n  return (\n    <Layout title={title}>\n      <div className='container-fluid d-flex flex-column'>\n        <div className={`row ${pageTitle}`}>\n          <h1>{`Tags: ${tag}`}</h1>\n        </div>\n        <div className='row py-3'>\n          <div className='col-sm-8 offset-sm-2'>\n            <ol style={{ listStyle: `none` }}>\n              {posts.map(post => {\n                const title = post.frontmatter.title || post.fields.slug\n                const postTags = (\n                  <p>\n                    {post.frontmatter.tags.map((tag, i) => {\n                      return i < post.frontmatter.tags.length - 1\n                        ? (<span><Link to={`/tags/${slugify(tag)}`} itemProp=\"url\" className={tagLink}>{tag}</Link>, </span>)\n                        : (<Link to={`/tags/${slugify(tag)}`} itemProp=\"url\" className={tagLink}>{tag}</Link>)\n                    })}\n                  </p>\n                )\n                const postMetadata = post.frontmatter.updated ? `${post.frontmatter.date} (updated: ${post.frontmatter.updated})` : `${post.frontmatter.date}`\n\n                return (\n                  <li key={post.fields.slug} className='py-1'>\n                    <article\n                      className=\"post-list-item\"\n                      itemScope\n                      itemType=\"http://schema.org/Article\"\n                    >\n                      <header>\n                        <h2>\n                          <Link to={post.fields.slug} itemProp=\"url\" className={postLink}>\n                            <span itemProp=\"headline\">{title}</span>\n                          </Link>\n                        </h2>\n                        <small>{postMetadata}</small>\n                        {postTags}\n                      </header>\n                      <section>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: post.frontmatter.description || post.excerpt,\n                          }}\n                          itemProp=\"description\"\n                        />\n                      </section>\n                    </article>\n                  </li>\n                )\n              })}\n            </ol>\n          </div>\n        </div>\n        {navButtons}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query AllBlogPostsForTags($tag: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {frontmatter: {date: DESC}}\n      filter: {frontmatter: {tags: {in: [$tag]}}}\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          updated(formatString: \"YYYY-MM-DD\")\n          tags\n        }\n      }\n    }\n  }\n`\n\nexport default TagsTemplate\n","// Taken from https://gist.github.com/codeguy/6684588\nexport const slugify = (str) => {\n  str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n  str = str.toLowerCase();\n\n  // remove accents, swap Ã± for n, etc\n  const from = \"Ã Ã¡Ã¤Ã¢Ã¨Ã©Ã«ÃªÃ¬Ã­Ã¯Ã®Ã²Ã³Ã¶Ã´Ã¹ÃºÃ¼Ã»Ã±Ã§Â·/_,:;\";\n  const to = \"aaaaeeeeiiiioooouuuunc------\";\n\n  for (let i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n  }\n\n  str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-'); // collapse dashes\n\n  return str;\n}","// extracted by mini-css-extract-plugin\nexport var pageTitle = \"page-module--page-title--0e41d\";","// extracted by mini-css-extract-plugin\nexport var postLink = \"blogList-module--post-link--f96a8\";\nexport var tagLink = \"blogList-module--tag-link--78e62\";"],"names":["_ref","text","link","React","Link","to","type","className","role","menuItem","menuItemActive","title","description","meta","children","id","activeClassName","href","target","rel","Date","getFullYear","_site$siteMetadata","_site$siteMetadata$so","location","site","useStaticQuery","metaDescription","siteMetadata","siteTitle","pageTitle","lang","siteLang","name","content","property","social","twitter","Head","params","data","pageContext","PageHead","tag","_ref2","currentPage","numPages","posts","allMarkdownRemark","nodes","length","Layout","navButtons","BlogListButton","slugify","style","listStyle","map","post","frontmatter","fields","slug","postTags","tags","i","itemProp","tagLink","postMetadata","updated","date","key","itemScope","itemType","postLink","dangerouslySetInnerHTML","__html","excerpt","str","replace","toLowerCase","from","l","RegExp","charAt"],"sourceRoot":""}